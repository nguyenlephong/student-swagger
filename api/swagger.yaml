---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Student API"
tags:
- name: "Student"
  description: ""
schemes:
- "http"
paths:
  /students:
    get:
      tags:
      - "Student"
      summary: "Get all students"
      description: ""
      operationId: "getAllStudents"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
          schema:
            type: "string"
        201:
          description: "No entries found"
        500:
          description: "Error"
      x-swagger-router-controller: "student"
    post:
      tags:
      - "Student"
      summary: "Create an student"
      description: ""
      operationId: "addNewStudent"
      consumes:
      - "application/json" 
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created student object"
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: "string"
            gender:
              type: "string"
            age:
              type: "number"
            address:
              type: "string"
          example:
            name: "Jammy"
            gender: "Male"
            age: "22"
            address: "Ho Chi Minh City"
      responses:
        200:
          description: "Successful operation"
        500: 
          description: "Error"
      x-swagger-router-controller: "student"
  /students/{studentId}:
    get:
      tags:
      - "Student"
      summary: "Get an student by studentId"
      description: ""
      operationId: "getStudentById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "studentId"
        in: "path"
        description: "Id belong to student will be fetched."
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Student"
        404:
          description: "Student not found"
      x-swagger-router-controller: "student"
    put:
      tags:
      - "Student"
      summary: "Updated student by studentId"
      description: ""
      operationId: "updateStudentById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "studentId"
        in: "path"
        description: "The id of student need to be updated."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated student object"
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: "string"
            gender:
              type: "string"
            age:
              type: "number"
            address:
              type: "string"
          example:
            name: "Jammy"
            gender: "Male"
            age: 22
            address: "Ho Chi Minh City"
      responses:
        200:
          description: "Successful operation"
        500:
          description: "Error"
      x-swagger-router-controller: "student"
    delete:
      tags:
      - "Student"
      summary: "Delete student by studentId"
      description: ""
      operationId: "deleteStudentById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "studentId"
        in: "path"
        description: "The id of student needs to be deleted."
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
        500:
          description: "Error"
      x-swagger-router-controller: "student"
definitions:
  Student:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Auto generated by System"
      name:
        type: "string"
      gender:
        type: "string"
      age:
        type: "number"
      address:
        type: "string"
    xml:
      name: "Student"
    example:
      name: "Jammy"
      gender: "Male"
      age: "22"
      address: "Ho Chi Minh City"
